# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: publish
on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI
  push:
    branches:
      - 'main'       # Run the workflow when pushing to the main branch
  pull_request:
    branches:
      - '*'          # Run the workflow for all pull requests
  release:
    types:
      - published    # Run the workflow when a new GitHub release is published

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

defaults:
  run:
    shell: pwsh
    

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore Dependencies
      run: dotnet restore
    - name: Build OpenAI.Mock
      run: dotnet build --no-restore
    - name: Pack Nuget
      run: dotnet pack --no-build --verbosity normal
    - name: Get Version
      id: package_version
      uses: KageKirin/get-csproj-version@v1.0.0
      with:
        file: src/Netizine.OpenAI.Mock/Netizine.OpenAI.Mock.csproj
    - name: Install Nuget Validator
      run: dotnet tool install --global dotnet-validate --version 0.0.1-preview.304
    - name: Validate Nuget Package
      run: dotnet validate package local "src/Netizine.OpenAI.Mock/bin/Release/OpenAI.Mock.${{ steps.test.package_version.version }}.nupkg"
    - name: Publish NuGet Package
      run: dotnet nuget push "src/Netizine.OpenAI.Mock/bin/Release/OpenAI.Mock.${{ steps.test.package_version.version }}.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate --source "github"

        